Define function to ``print_square(size)``.


Use ``#`` character to print the square. ``size``
represents the square length and height.


::


    >>> print_square = __import__('4-print_square').print_square
    >>> print_square(1)
    #


::


    >>> print_square(4)
    ####
    ####
    ####
    ####


::


    >>> print_square(10)
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########


If ``size`` is zero, print nothing.


::


    >>> print_square(0)



``size`` must be an integer. Else, raise TypeError

::


    >>> print_square("not an int")
    Traceback (most recent call last):
    TypeError: size must be an integer


::


    >>> print_square(5.5)
    Traceback (most recent call last):
    TypeError: size must be an integer


::


    >>> print_square(None)
    Traceback (most recent call last):
    TypeError: size must be an integer


``size`` should not be less than 0 or a ValueError is raised.


::


    >>> print_square(-7)
    Traceback (most recent call last):
    ValueError: size must be >= 0


type-checking preceeds value-checking.


::


    >>> print_square(-7.5)
    Traceback (most recent call last):
    TypeError: size must be an integer


Provide at least one value


::


    >>> print_square()
    Traceback (most recent call last):
    TypeError: print_square() the parameters are too few: 'size'
